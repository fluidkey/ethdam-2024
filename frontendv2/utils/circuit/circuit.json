{"noir_version":"0.26.0+c46b164ce56e6a8f81255fb17eb6539bd040f336","hash":16212256193286545086,"abi":{"parameters":[{"name":"hashed_message","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"pub_key_x","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"pub_key_y","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"signature","type":{"kind":"array","length":64,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"stealth_secret","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"ks_index","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"stealth_init","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"proofs","type":{"kind":"array","length":3,"type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}}},"visibility":"private"},{"name":"merkle_state_root","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"}],"param_witnesses":{"hashed_message":[{"start":0,"end":32}],"ks_index":[{"start":192,"end":224}],"merkle_state_root":[{"start":352,"end":384}],"proofs":[{"start":256,"end":352}],"pub_key_x":[{"start":32,"end":64}],"pub_key_y":[{"start":64,"end":96}],"signature":[{"start":96,"end":160}],"stealth_init":[{"start":224,"end":256}],"stealth_secret":[{"start":160,"end":192}]},"return_type":null,"return_witnesses":[]},"bytecode":"","debug_symbols":"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","file_map":{"47":{"source":"use dep::std;\n\n/**\n*   @param hashed_message - the hashed message that is signed\n*   @param pub_key_x - x vector of the public key connected to the account that signed\n*   @param pub_key_y - y vector of the public key connected to the account that signed\n*   @param signature - the signature of the hashed_message\n*   @param stealth_secret - the stealth_secret\n*   @param ks_index - the ks_index\n*   @param stealth_init - the hashed used to init the stealth account\n*   @param proofs - array with the proofs for the merkle tree. It's an array of array, with max 3 proofs\n**/\nfn main(\n    hashed_message: pub [u8; 32], pub_key_x: [u8; 32], pub_key_y: [u8; 32], signature: [u8; 64],\n    stealth_secret: [u8; 32], ks_index: [u8; 32], stealth_init: pub [u8; 32],\n    proofs: [[u8; 32]; 3], merkle_state_root: pub [u8; 32]\n) {\n    // verify signature\n    let valid_signature = std::ecdsa_secp256k1::verify_signature(pub_key_x, pub_key_y, signature, hashed_message);\n    assert(valid_signature);\n\n    // verify that the stealth_init is obtained from ks_index and stealth_secret\n    assert(std::hash::keccak256(concat_uint256_array(stealth_secret, ks_index), 64) == stealth_init);\n\n    // verify that from publick_key + index we get up to root following the path\n    let pub_key_hash = std::hash::keccak256(concat_uint256_array(pub_key_x, pub_key_y), 64);\n    let leaf = std::hash::keccak256(\n        std::hash::keccak256(concat_uint256_array(pub_key_hash, ks_index), 64),\n        32\n    );\n    assert(eval_merkle_root_4_levels(leaf, proofs) == merkle_state_root);\n}\n\n// concat 2 keccak256 into a one u512 value\nunconstrained fn concat_uint256_array(arr1: [u8; 32], arr2: [u8; 32]) -> [u8; 64] {\n    let mut out: [u8; 64] = [0; 64];\n    for i in 0..32 {\n        out[i] = arr1[i];\n    }\n    for i in 0..32 {\n        out[32 + i] = arr2[i];\n    }\n    out\n}\n\n// concat 2 keccak256 into a one u512 value\nunconstrained fn eval_merkle_root_4_levels(leaf: [u8; 32], proofs: [[u8; 32]; 3]) -> [u8; 32] {\n    let mut current_step: [u8; 32] = leaf;\n    // loop over the proofs\n    for p in 0..3 {\n        current_step = std::hash::keccak256(concat_uint256_array(current_step, proofs[p]), 64);\n    }\n    current_step\n}\n\nfn verifyTransaction() {\n    // public input parameters are\n    // * keystore root hash\n    // * paths to root hash\n    // private input parameters are\n    // * public key (array) - for us 1 key is enough (no need of array)\n    // * signature\n    // * hash of data signed\n    // what the code has to do\n    // * verify the validity of signature\n    // * check validity of the path to roothash from public key\n}","path":"/home/tony/Documents/repos/Fluidkey/zk/ethdam-2024/noir/src/main.nr"}}}